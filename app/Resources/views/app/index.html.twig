{% extends 'base.html.twig' %}

{% block body %}
    <section class="content-header">
        <h1>Dashboard
            <small>Indicadores</small>
        </h1>
        <ol class="breadcrumb">
            <li class="active"><a href="{{ path('homepage') }}"><i class="fa fa-dashboard"></i> Dashboard</a></li>
        </ol>
    </section>

    <section class="content">
        <div class="row">

            {% if is_granted('ROLE_USUARIO') %}
                {{ render(controller('AppBundle:Indicador:statusChamados')) }}

                {{ render(controller('AppBundle:Indicador:chamadoAbertos')) }}
            {% endif %}

        </div>

        {% if is_granted('ROLE_ADMIN') or is_granted('ROLE_TECNICO') %}
        <div class="row">
            {{ render(controller('AppBundle:Indicador:countChamados')) }}
            <!-- ./col -->
            {{ render(controller('AppBundle:Indicador:porcentagemChamados')) }}
            <!-- ./col -->
            {{ render(controller('AppBundle:Indicador:countUsuarios')) }}
            <!-- ./col -->
            {{ render(controller('AppBundle:Indicador:pendenteChamados')) }}
            <!-- ./col -->
        </div>
        {% endif %}

        <div class="row">
            {% if is_granted('ROLE_ADMIN') or is_granted('ROLE_TECNICO')  %}
                <!-- Left col -->
                {{ render(controller('AppBundle:Indicador:balancoAnual')) }}

                <!-- right col (We are only adding the ID to make the widgets sortable)-->
                {{ render(controller('AppBundle:Indicador:chamadoAbertos')) }}

                {{ render(controller('AppBundle:Indicador:chamadoUnidade')) }}
                {{ render(controller('AppBundle:Indicador:topProblema')) }}
            {% endif %}
            <!-- /.Left col -->
            <!-- right col -->
        </div>
    </section>
{% endblock %}

{% block javascripts %}
    <script>
        var dynamicColors = function() {
            var r = Math.floor(Math.random() * 255);
            var g = Math.floor(Math.random() * 255);
            var b = Math.floor(Math.random() * 255);
            return "rgb(" + r + "," + g + "," + b + ")";
        };

        // Donut chart
        if($('#sales-chart').length){
            //Donut Chart
            var donut = new Morris.Donut({
                element: 'sales-chart',
                resize: true,
                colors: ["#3c8dbc", "#f56954", "#00a65a", "#dbbf58"],
                data: $('#sales-chart').data('chart'),
                hideHover: 'auto'
            });
        }

        /* Morris.js Charts */
        // Sales chart
        /*var area = new Morris.Area({
            element: 'revenue-chart',
            resize: true,
            data: [
                {y: '2011 Q1', item1: 2666, item2: 2666},
                {y: '2011 Q2', item1: 2778, item2: 2294},
                {y: '2011 Q3', item1: 4912, item2: 1969},
                {y: '2011 Q4', item1: 3767, item2: 3597},
                {y: '2012 Q1', item1: 6810, item2: 1914},
                {y: '2012 Q2', item1: 5670, item2: 4293},
                {y: '2012 Q3', item1: 4820, item2: 3795},
                {y: '2012 Q4', item1: 15073, item2: 5967},
                {y: '2013 Q1', item1: 10687, item2: 4460},
                {y: '2013 Q2', item1: 8432, item2: 5713},
                {y: '2014 Q2', item1: 8432, item2: 5713}
            ],
            xkey: 'y',
            ykeys: ['item1', 'item2'],
            labels: ['Anertos', 'Atendidos'],
            lineColors: ['#a0d0e0', '#3c8dbc'],
            hideHover: 'auto'
        });

        var line = new Morris.Line({
            element: 'line-chart',
            resize: true,
            data: [
                {y: '2011 Q1', item1: 2666},
                {y: '2011 Q2', item1: 2778},
                {y: '2011 Q3', item1: 4912},
                {y: '2011 Q4', item1: 3767},
                {y: '2012 Q1', item1: 6810},
                {y: '2012 Q2', item1: 5670},
                {y: '2012 Q3', item1: 4820},
                {y: '2012 Q4', item1: 15073},
                {y: '2013 Q1', item1: 10687},
                {y: '2013 Q2', item1: 8432}
            ],
            xkey: 'y',
            ykeys: ['item1'],
            labels: ['Item 1'],
            lineColors: ['#efefef'],
            lineWidth: 2,
            hideHover: 'auto',
            gridTextColor: "#fff",
            gridStrokeWidth: 0.4,
            pointSize: 4,
            pointStrokeColors: ["#efefef"],
            gridLineColor: "#efefef",
            gridTextFamily: "Open Sans",
            gridTextSize: 10
        });*/

        if($('#bar-chart').length) {
            var bar = new Morris.Bar({
                element: 'bar-chart',
                resize: true,
                data: $('#bar-chart').data('chart'),
                barColors: ['#4c4cff', '#c5b358', '#7bafd4', '#00a65a', '#f56954'],
                xkey: 'month',
                ykeys: ['total', 'abertos', 'atendimentos', 'fechados', 'cancelados'],
                labels: ['Total de Chamados', 'Em Aberto', 'Em Atendimento', 'Finalizados', 'Cancelados'],
                hideHover: 'auto'
            });
        }

        //-------------
        //- Chamado x Unidades CHART -
        //-------------
        if($("#pieChart").length){
            var $pieChart = $("#pieChart"),
                    data = $pieChart.data('chart');

            data.datasets[0].backgroundColor.forEach(function(element, index, array){
                array[index] = dynamicColors();
            });

            var pieChart = new Chart($("#pieChart"), {
                type: 'pie',
                data: data
            });
        }
        //-------------
        //- Top 10 Problemas
        //-------------
        if($("#top-problemas-chart").length){
            var $topProblemas = $("#top-problemas-chart"),
                    data = $topProblemas.data('chart');

            data.datasets[0].backgroundColor.forEach(function(element, index, array){
                array[index] = dynamicColors();
            });

            var myChart2 = new Chart($topProblemas, {
                type: 'pie',
                data: data
            });
        }
    </script>
{% endblock %}